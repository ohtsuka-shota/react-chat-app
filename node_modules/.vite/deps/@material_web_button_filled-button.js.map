{
  "version": 3,
  "sources": ["../../@material/web/elevation/internal/elevation.ts", "../../@material/web/elevation/internal/elevation-styles.ts", "../../@material/web/elevation/elevation.ts", "../../@material/web/internal/controller/attachable-controller.ts", "../../@material/web/focus/internal/focus-ring.ts", "../../@material/web/focus/internal/focus-ring-styles.ts", "../../@material/web/focus/md-focus-ring.ts", "../../@material/web/ripple/internal/ripple.ts", "../../@material/web/ripple/internal/ripple-styles.ts", "../../@material/web/ripple/ripple.ts", "../../@material/web/internal/controller/form-submitter.ts", "../../@material/web/internal/events/form-label-activation.ts", "../../@material/web/button/internal/button.ts", "../../@material/web/button/internal/filled-button.ts", "../../@material/web/button/internal/filled-styles.ts", "../../@material/web/button/internal/shared-elevation-styles.ts", "../../@material/web/button/internal/shared-styles.ts", "../../@material/web/button/filled-button.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, LitElement} from 'lit';\n\n/**\n * A component for elevation.\n */\nexport class Elevation extends LitElement {\n  override connectedCallback() {\n    super.connectedCallback();\n    // Needed for VoiceOver, which will create a \"group\" if the element is a\n    // sibling to other content.\n    this.setAttribute('aria-hidden', 'true');\n  }\n\n  protected override render() {\n    return html`<span class=\"shadow\"></span>`;\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./elevation/internal/elevation-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host,.shadow,.shadow::before,.shadow::after{border-radius:inherit;inset:0;position:absolute;transition-duration:inherit;transition-property:inherit;transition-timing-function:inherit}:host{display:flex;pointer-events:none;transition-property:box-shadow,opacity}.shadow::before,.shadow::after{content:\"\";transition-property:box-shadow,opacity;--_level: var(--md-elevation-level, 0);--_shadow-color: var(--md-elevation-shadow-color, var(--md-sys-color-shadow, #000))}.shadow::before{box-shadow:0px calc(1px*(clamp(0,var(--_level),1) + clamp(0,var(--_level) - 3,1) + 2*clamp(0,var(--_level) - 4,1))) calc(1px*(2*clamp(0,var(--_level),1) + clamp(0,var(--_level) - 2,1) + clamp(0,var(--_level) - 4,1))) 0px var(--_shadow-color);opacity:.3}.shadow::after{box-shadow:0px calc(1px*(clamp(0,var(--_level),1) + clamp(0,var(--_level) - 1,1) + 2*clamp(0,var(--_level) - 2,3))) calc(1px*(3*clamp(0,var(--_level),2) + 2*clamp(0,var(--_level) - 2,3))) calc(1px*(clamp(0,var(--_level),4) + 2*clamp(0,var(--_level) - 4,1))) var(--_shadow-color);opacity:.15}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Elevation} from './internal/elevation.js';\nimport {styles} from './internal/elevation-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-elevation': MdElevation;\n  }\n}\n\n/**\n * The `<md-elevation>` custom element with default styles.\n *\n * Elevation is the relative distance between two surfaces along the z-axis.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-elevation')\nexport class MdElevation extends Elevation {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, ReactiveController, ReactiveControllerHost} from 'lit';\n\n/**\n * An element that can be attached to an associated controlling element.\n */\nexport interface Attachable {\n  /**\n   * Reflects the value of the `for` attribute, which is the ID of the element's\n   * associated control.\n   *\n   * Use this when the elements's associated control is not its parent.\n   *\n   * To manually control an element, set its `for` attribute to `\"\"`.\n   *\n   * @example\n   * ```html\n   * <div class=\"container\">\n   *   <md-attachable for=\"interactive\"></md-attachable>\n   *   <button id=\"interactive\">Action</button>\n   * </div>\n   * ```\n   *\n   * @example\n   * ```html\n   * <button class=\"manually-controlled\">\n   *   <md-attachable for=\"\"></md-attachable>\n   * </button>\n   * ```\n   */\n  htmlFor: string | null;\n\n  /**\n   * Gets or sets the element that controls the visibility of the attachable\n   * element. It is one of:\n   *\n   * - The control referenced by the `for` attribute.\n   * - The control provided to `element.attach(control)`\n   * - The element's parent.\n   * - `null` if the element is not controlled.\n   */\n  control: HTMLElement | null;\n\n  /**\n   * Attaches the element to an interactive control.\n   *\n   * @param control The element that controls the attachable element.\n   */\n  attach(control: HTMLElement): void;\n\n  /**\n   * Detaches the element from its current control.\n   */\n  detach(): void;\n}\n\n/**\n * A key to retrieve an `Attachable` element's `AttachableController` from a\n * global `MutationObserver`.\n */\nconst ATTACHABLE_CONTROLLER = Symbol('attachableController');\n\n/**\n * The host of an `AttachableController`. The controller will add itself to\n * the host so it can be retrieved in a global `MutationObserver`.\n */\ninterface AttachableControllerHost extends ReactiveControllerHost, HTMLElement {\n  [ATTACHABLE_CONTROLLER]?: AttachableController;\n}\n\nlet FOR_ATTRIBUTE_OBSERVER: MutationObserver | undefined;\n\nif (!isServer) {\n  /**\n   * A global `MutationObserver` that reacts to `for` attribute changes on\n   * `Attachable` elements. If the `for` attribute changes, the controller will\n   * re-attach to the new referenced element.\n   */\n  FOR_ATTRIBUTE_OBSERVER = new MutationObserver((records) => {\n    for (const record of records) {\n      // When a control's `for` attribute changes, inform its\n      // `AttachableController` to update to a new control.\n      (record.target as AttachableControllerHost)[\n        ATTACHABLE_CONTROLLER\n      ]?.hostConnected();\n    }\n  });\n}\n\n/**\n * A controller that provides an implementation for `Attachable` elements.\n *\n * @example\n * ```ts\n * class MyElement extends LitElement implements Attachable {\n *   get control() { return this.attachableController.control; }\n *\n *   private readonly attachableController = new AttachableController(\n *     this,\n *     (previousControl, newControl) => {\n *       previousControl?.removeEventListener('click', this.handleClick);\n *       newControl?.addEventListener('click', this.handleClick);\n *     }\n *   );\n *\n *   // Implement remaining `Attachable` properties/methods that call the\n *   // controller's properties/methods.\n * }\n * ```\n */\nexport class AttachableController implements ReactiveController, Attachable {\n  get htmlFor() {\n    return this.host.getAttribute('for');\n  }\n\n  set htmlFor(htmlFor: string | null) {\n    if (htmlFor === null) {\n      this.host.removeAttribute('for');\n    } else {\n      this.host.setAttribute('for', htmlFor);\n    }\n  }\n\n  get control() {\n    if (this.host.hasAttribute('for')) {\n      if (!this.htmlFor || !this.host.isConnected) {\n        return null;\n      }\n\n      return (\n        this.host.getRootNode() as Document | ShadowRoot\n      ).querySelector<HTMLElement>(`#${this.htmlFor}`);\n    }\n\n    return this.currentControl || this.host.parentElement;\n  }\n  set control(control: HTMLElement | null) {\n    if (control) {\n      this.attach(control);\n    } else {\n      this.detach();\n    }\n  }\n\n  private currentControl: HTMLElement | null = null;\n\n  /**\n   * Creates a new controller for an `Attachable` element.\n   *\n   * @param host The `Attachable` element.\n   * @param onControlChange A callback with two parameters for the previous and\n   *     next control. An `Attachable` element may perform setup or teardown\n   *     logic whenever the control changes.\n   */\n  constructor(\n    private readonly host: AttachableControllerHost,\n    private readonly onControlChange: (\n      prev: HTMLElement | null,\n      next: HTMLElement | null,\n    ) => void,\n  ) {\n    host.addController(this);\n    host[ATTACHABLE_CONTROLLER] = this;\n    FOR_ATTRIBUTE_OBSERVER?.observe(host, {attributeFilter: ['for']});\n  }\n\n  attach(control: HTMLElement) {\n    if (control === this.currentControl) {\n      return;\n    }\n\n    this.setCurrentControl(control);\n    // When imperatively attaching, remove the `for` attribute so\n    // that the attached control is used instead of a referenced one.\n    this.host.removeAttribute('for');\n  }\n\n  detach() {\n    this.setCurrentControl(null);\n    // When imperatively detaching, add an empty `for=\"\"` attribute. This will\n    // ensure the control is `null` rather than the `parentElement`.\n    this.host.setAttribute('for', '');\n  }\n\n  /** @private */\n  hostConnected() {\n    this.setCurrentControl(this.control);\n  }\n\n  /** @private */\n  hostDisconnected() {\n    this.setCurrentControl(null);\n  }\n\n  private setCurrentControl(control: HTMLElement | null) {\n    this.onControlChange(this.currentControl, control);\n    this.currentControl = control;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, LitElement, PropertyValues} from 'lit';\nimport {property} from 'lit/decorators.js';\n\nimport {\n  Attachable,\n  AttachableController,\n} from '../../internal/controller/attachable-controller.js';\n\n/**\n * Events that the focus ring listens to.\n */\nconst EVENTS = ['focusin', 'focusout', 'pointerdown'];\n\n/**\n * A focus ring component.\n *\n * @fires visibility-changed {Event} Fired whenever `visible` changes.\n */\nexport class FocusRing extends LitElement implements Attachable {\n  /**\n   * Makes the focus ring visible.\n   */\n  @property({type: Boolean, reflect: true}) visible = false;\n\n  /**\n   * Makes the focus ring animate inwards instead of outwards.\n   */\n  @property({type: Boolean, reflect: true}) inward = false;\n\n  get htmlFor() {\n    return this.attachableController.htmlFor;\n  }\n\n  set htmlFor(htmlFor: string | null) {\n    this.attachableController.htmlFor = htmlFor;\n  }\n\n  get control() {\n    return this.attachableController.control;\n  }\n  set control(control: HTMLElement | null) {\n    this.attachableController.control = control;\n  }\n\n  private readonly attachableController = new AttachableController(\n    this,\n    this.onControlChange.bind(this),\n  );\n\n  attach(control: HTMLElement) {\n    this.attachableController.attach(control);\n  }\n\n  detach() {\n    this.attachableController.detach();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    // Needed for VoiceOver, which will create a \"group\" if the element is a\n    // sibling to other content.\n    this.setAttribute('aria-hidden', 'true');\n  }\n\n  /** @private */\n  handleEvent(event: FocusRingEvent) {\n    if (event[HANDLED_BY_FOCUS_RING]) {\n      // This ensures the focus ring does not activate when multiple focus rings\n      // are used within a single component.\n      return;\n    }\n\n    switch (event.type) {\n      default:\n        return;\n      case 'focusin':\n        this.visible = this.control?.matches(':focus-visible') ?? false;\n        break;\n      case 'focusout':\n      case 'pointerdown':\n        this.visible = false;\n        break;\n    }\n\n    event[HANDLED_BY_FOCUS_RING] = true;\n  }\n\n  private onControlChange(prev: HTMLElement | null, next: HTMLElement | null) {\n    if (isServer) return;\n\n    for (const event of EVENTS) {\n      prev?.removeEventListener(event, this);\n      next?.addEventListener(event, this);\n    }\n  }\n\n  override update(changed: PropertyValues<FocusRing>) {\n    if (changed.has('visible')) {\n      // This logic can be removed once the `:has` selector has been introduced\n      // to Firefox. This is necessary to allow correct submenu styles.\n      this.dispatchEvent(new Event('visibility-changed'));\n    }\n    super.update(changed);\n  }\n}\n\nconst HANDLED_BY_FOCUS_RING = Symbol('handledByFocusRing');\n\ninterface FocusRingEvent extends Event {\n  [HANDLED_BY_FOCUS_RING]: true;\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./focus/internal/focus-ring-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{animation-delay:0s,calc(var(--md-focus-ring-duration, 600ms)*.25);animation-duration:calc(var(--md-focus-ring-duration, 600ms)*.25),calc(var(--md-focus-ring-duration, 600ms)*.75);animation-timing-function:cubic-bezier(0.2, 0, 0, 1);box-sizing:border-box;color:var(--md-focus-ring-color, var(--md-sys-color-secondary, #625b71));display:none;pointer-events:none;position:absolute}:host([visible]){display:flex}:host(:not([inward])){animation-name:outward-grow,outward-shrink;border-end-end-radius:calc(var(--md-focus-ring-shape-end-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-end-start-radius:calc(var(--md-focus-ring-shape-end-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-start-end-radius:calc(var(--md-focus-ring-shape-start-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-start-start-radius:calc(var(--md-focus-ring-shape-start-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));inset:calc(-1*var(--md-focus-ring-outward-offset, 2px));outline:var(--md-focus-ring-width, 3px) solid currentColor}:host([inward]){animation-name:inward-grow,inward-shrink;border-end-end-radius:calc(var(--md-focus-ring-shape-end-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-end-start-radius:calc(var(--md-focus-ring-shape-end-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-start-end-radius:calc(var(--md-focus-ring-shape-start-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-start-start-radius:calc(var(--md-focus-ring-shape-start-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border:var(--md-focus-ring-width, 3px) solid currentColor;inset:var(--md-focus-ring-inward-offset, 0px)}@keyframes outward-grow{from{outline-width:0}to{outline-width:var(--md-focus-ring-active-width, 8px)}}@keyframes outward-shrink{from{outline-width:var(--md-focus-ring-active-width, 8px)}}@keyframes inward-grow{from{border-width:0}to{border-width:var(--md-focus-ring-active-width, 8px)}}@keyframes inward-shrink{from{border-width:var(--md-focus-ring-active-width, 8px)}}@media(prefers-reduced-motion){:host{animation:none}}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {FocusRing} from './internal/focus-ring.js';\nimport {styles} from './internal/focus-ring-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-focus-ring': MdFocusRing;\n  }\n}\n\n/**\n * TODO(b/267336424): add docs\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-focus-ring')\nexport class MdFocusRing extends FocusRing {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, isServer, LitElement, PropertyValues} from 'lit';\nimport {property, query, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {\n  Attachable,\n  AttachableController,\n} from '../../internal/controller/attachable-controller.js';\nimport {EASING} from '../../internal/motion/animation.js';\n\nconst PRESS_GROW_MS = 450;\nconst MINIMUM_PRESS_MS = 225;\nconst INITIAL_ORIGIN_SCALE = 0.2;\nconst PADDING = 10;\nconst SOFT_EDGE_MINIMUM_SIZE = 75;\nconst SOFT_EDGE_CONTAINER_RATIO = 0.35;\nconst PRESS_PSEUDO = '::after';\nconst ANIMATION_FILL = 'forwards';\n\n/**\n * Interaction states for the ripple.\n *\n * On Touch:\n *  - `INACTIVE -> TOUCH_DELAY -> WAITING_FOR_CLICK -> INACTIVE`\n *  - `INACTIVE -> TOUCH_DELAY -> HOLDING -> WAITING_FOR_CLICK -> INACTIVE`\n *\n * On Mouse or Pen:\n *   - `INACTIVE -> WAITING_FOR_CLICK -> INACTIVE`\n */\nenum State {\n  /**\n   * Initial state of the control, no touch in progress.\n   *\n   * Transitions:\n   *   - on touch down: transition to `TOUCH_DELAY`.\n   *   - on mouse down: transition to `WAITING_FOR_CLICK`.\n   */\n  INACTIVE,\n  /**\n   * Touch down has been received, waiting to determine if it's a swipe or\n   * scroll.\n   *\n   * Transitions:\n   *   - on touch up: begin press; transition to `WAITING_FOR_CLICK`.\n   *   - on cancel: transition to `INACTIVE`.\n   *   - after `TOUCH_DELAY_MS`: begin press; transition to `HOLDING`.\n   */\n  TOUCH_DELAY,\n  /**\n   * A touch has been deemed to be a press\n   *\n   * Transitions:\n   *  - on up: transition to `WAITING_FOR_CLICK`.\n   */\n  HOLDING,\n  /**\n   * The user touch has finished, transition into rest state.\n   *\n   * Transitions:\n   *   - on click end press; transition to `INACTIVE`.\n   */\n  WAITING_FOR_CLICK,\n}\n\n/**\n * Events that the ripple listens to.\n */\nconst EVENTS = [\n  'click',\n  'contextmenu',\n  'pointercancel',\n  'pointerdown',\n  'pointerenter',\n  'pointerleave',\n  'pointerup',\n];\n\n/**\n * Delay reacting to touch so that we do not show the ripple for a swipe or\n * scroll interaction.\n */\nconst TOUCH_DELAY_MS = 150;\n\n/**\n * Used to detect if HCM is active. Events do not process during HCM when the\n * ripple is not displayed.\n */\nconst FORCED_COLORS = isServer\n  ? null\n  : window.matchMedia('(forced-colors: active)');\n\n/**\n * A ripple component.\n */\nexport class Ripple extends LitElement implements Attachable {\n  /**\n   * Disables the ripple.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  get htmlFor() {\n    return this.attachableController.htmlFor;\n  }\n\n  set htmlFor(htmlFor: string | null) {\n    this.attachableController.htmlFor = htmlFor;\n  }\n\n  get control() {\n    return this.attachableController.control;\n  }\n  set control(control: HTMLElement | null) {\n    this.attachableController.control = control;\n  }\n\n  @state() private hovered = false;\n  @state() private pressed = false;\n\n  @query('.surface') private readonly mdRoot!: HTMLElement | null;\n  private rippleSize = '';\n  private rippleScale = '';\n  private initialSize = 0;\n  private growAnimation?: Animation;\n  private state = State.INACTIVE;\n  private rippleStartEvent?: PointerEvent;\n  private checkBoundsAfterContextMenu = false;\n  private readonly attachableController = new AttachableController(\n    this,\n    this.onControlChange.bind(this),\n  );\n\n  attach(control: HTMLElement) {\n    this.attachableController.attach(control);\n  }\n\n  detach() {\n    this.attachableController.detach();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    // Needed for VoiceOver, which will create a \"group\" if the element is a\n    // sibling to other content.\n    this.setAttribute('aria-hidden', 'true');\n  }\n\n  protected override render() {\n    const classes = {\n      'hovered': this.hovered,\n      'pressed': this.pressed,\n    };\n\n    return html`<div class=\"surface ${classMap(classes)}\"></div>`;\n  }\n\n  protected override update(changedProps: PropertyValues<Ripple>) {\n    if (changedProps.has('disabled') && this.disabled) {\n      this.hovered = false;\n      this.pressed = false;\n    }\n    super.update(changedProps);\n  }\n\n  /**\n   * TODO(b/269799771): make private\n   * @private only public for slider\n   */\n  handlePointerenter(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.hovered = true;\n  }\n\n  /**\n   * TODO(b/269799771): make private\n   * @private only public for slider\n   */\n  handlePointerleave(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.hovered = false;\n\n    // release a held mouse or pen press that moves outside the element\n    if (this.state !== State.INACTIVE) {\n      this.endPressAnimation();\n    }\n  }\n\n  private handlePointerup(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    if (this.state === State.HOLDING) {\n      this.state = State.WAITING_FOR_CLICK;\n      return;\n    }\n\n    if (this.state === State.TOUCH_DELAY) {\n      this.state = State.WAITING_FOR_CLICK;\n      this.startPressAnimation(this.rippleStartEvent);\n      return;\n    }\n  }\n\n  private async handlePointerdown(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.rippleStartEvent = event;\n    if (!this.isTouch(event)) {\n      this.state = State.WAITING_FOR_CLICK;\n      this.startPressAnimation(event);\n      return;\n    }\n\n    // after a longpress contextmenu event, an extra `pointerdown` can be\n    // dispatched to the pressed element. Check that the down is within\n    // bounds of the element in this case.\n    if (this.checkBoundsAfterContextMenu && !this.inBounds(event)) {\n      return;\n    }\n\n    this.checkBoundsAfterContextMenu = false;\n\n    // Wait for a hold after touch delay\n    this.state = State.TOUCH_DELAY;\n    await new Promise((resolve) => {\n      setTimeout(resolve, TOUCH_DELAY_MS);\n    });\n\n    if (this.state !== State.TOUCH_DELAY) {\n      return;\n    }\n\n    this.state = State.HOLDING;\n    this.startPressAnimation(event);\n  }\n\n  private handleClick() {\n    // Click is a MouseEvent in Firefox and Safari, so we cannot use\n    // `shouldReactToEvent`\n    if (this.disabled) {\n      return;\n    }\n\n    if (this.state === State.WAITING_FOR_CLICK) {\n      this.endPressAnimation();\n      return;\n    }\n\n    if (this.state === State.INACTIVE) {\n      // keyboard synthesized click event\n      this.startPressAnimation();\n      this.endPressAnimation();\n    }\n  }\n\n  private handlePointercancel(event: PointerEvent) {\n    if (!this.shouldReactToEvent(event)) {\n      return;\n    }\n\n    this.endPressAnimation();\n  }\n\n  private handleContextmenu() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.checkBoundsAfterContextMenu = true;\n    this.endPressAnimation();\n  }\n\n  private determineRippleSize() {\n    const {height, width} = this.getBoundingClientRect();\n    const maxDim = Math.max(height, width);\n    const softEdgeSize = Math.max(\n      SOFT_EDGE_CONTAINER_RATIO * maxDim,\n      SOFT_EDGE_MINIMUM_SIZE,\n    );\n\n    const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\n    const hypotenuse = Math.sqrt(width ** 2 + height ** 2);\n    const maxRadius = hypotenuse + PADDING;\n\n    this.initialSize = initialSize;\n    this.rippleScale = `${(maxRadius + softEdgeSize) / initialSize}`;\n    this.rippleSize = `${initialSize}px`;\n  }\n\n  private getNormalizedPointerEventCoords(pointerEvent: PointerEvent): {\n    x: number;\n    y: number;\n  } {\n    const {scrollX, scrollY} = window;\n    const {left, top} = this.getBoundingClientRect();\n    const documentX = scrollX + left;\n    const documentY = scrollY + top;\n    const {pageX, pageY} = pointerEvent;\n    return {x: pageX - documentX, y: pageY - documentY};\n  }\n\n  private getTranslationCoordinates(positionEvent?: Event) {\n    const {height, width} = this.getBoundingClientRect();\n    // end in the center\n    const endPoint = {\n      x: (width - this.initialSize) / 2,\n      y: (height - this.initialSize) / 2,\n    };\n\n    let startPoint;\n    if (positionEvent instanceof PointerEvent) {\n      startPoint = this.getNormalizedPointerEventCoords(positionEvent);\n    } else {\n      startPoint = {\n        x: width / 2,\n        y: height / 2,\n      };\n    }\n\n    // center around start point\n    startPoint = {\n      x: startPoint.x - this.initialSize / 2,\n      y: startPoint.y - this.initialSize / 2,\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  private startPressAnimation(positionEvent?: Event) {\n    if (!this.mdRoot) {\n      return;\n    }\n\n    this.pressed = true;\n    this.growAnimation?.cancel();\n    this.determineRippleSize();\n    const {startPoint, endPoint} =\n      this.getTranslationCoordinates(positionEvent);\n    const translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n    const translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n\n    this.growAnimation = this.mdRoot.animate(\n      {\n        top: [0, 0],\n        left: [0, 0],\n        height: [this.rippleSize, this.rippleSize],\n        width: [this.rippleSize, this.rippleSize],\n        transform: [\n          `translate(${translateStart}) scale(1)`,\n          `translate(${translateEnd}) scale(${this.rippleScale})`,\n        ],\n      },\n      {\n        pseudoElement: PRESS_PSEUDO,\n        duration: PRESS_GROW_MS,\n        easing: EASING.STANDARD,\n        fill: ANIMATION_FILL,\n      },\n    );\n  }\n\n  private async endPressAnimation() {\n    this.rippleStartEvent = undefined;\n    this.state = State.INACTIVE;\n    const animation = this.growAnimation;\n    let pressAnimationPlayState = Infinity;\n    if (typeof animation?.currentTime === 'number') {\n      pressAnimationPlayState = animation.currentTime;\n    } else if (animation?.currentTime) {\n      pressAnimationPlayState = animation.currentTime.to('ms').value;\n    }\n\n    if (pressAnimationPlayState >= MINIMUM_PRESS_MS) {\n      this.pressed = false;\n      return;\n    }\n\n    await new Promise((resolve) => {\n      setTimeout(resolve, MINIMUM_PRESS_MS - pressAnimationPlayState);\n    });\n\n    if (this.growAnimation !== animation) {\n      // A new press animation was started. The old animation was canceled and\n      // should not finish the pressed state.\n      return;\n    }\n\n    this.pressed = false;\n  }\n\n  /**\n   * Returns `true` if\n   *  - the ripple element is enabled\n   *  - the pointer is primary for the input type\n   *  - the pointer is the pointer that started the interaction, or will start\n   * the interaction\n   *  - the pointer is a touch, or the pointer state has the primary button\n   * held, or the pointer is hovering\n   */\n  private shouldReactToEvent(event: PointerEvent) {\n    if (this.disabled || !event.isPrimary) {\n      return false;\n    }\n\n    if (\n      this.rippleStartEvent &&\n      this.rippleStartEvent.pointerId !== event.pointerId\n    ) {\n      return false;\n    }\n\n    if (event.type === 'pointerenter' || event.type === 'pointerleave') {\n      return !this.isTouch(event);\n    }\n\n    const isPrimaryButton = event.buttons === 1;\n    return this.isTouch(event) || isPrimaryButton;\n  }\n\n  /**\n   * Check if the event is within the bounds of the element.\n   *\n   * This is only needed for the \"stuck\" contextmenu longpress on Chrome.\n   */\n  private inBounds({x, y}: PointerEvent) {\n    const {top, left, bottom, right} = this.getBoundingClientRect();\n    return x >= left && x <= right && y >= top && y <= bottom;\n  }\n\n  private isTouch({pointerType}: PointerEvent) {\n    return pointerType === 'touch';\n  }\n\n  /** @private */\n  async handleEvent(event: Event) {\n    if (FORCED_COLORS?.matches) {\n      // Skip event logic since the ripple is `display: none`.\n      return;\n    }\n\n    switch (event.type) {\n      case 'click':\n        this.handleClick();\n        break;\n      case 'contextmenu':\n        this.handleContextmenu();\n        break;\n      case 'pointercancel':\n        this.handlePointercancel(event as PointerEvent);\n        break;\n      case 'pointerdown':\n        await this.handlePointerdown(event as PointerEvent);\n        break;\n      case 'pointerenter':\n        this.handlePointerenter(event as PointerEvent);\n        break;\n      case 'pointerleave':\n        this.handlePointerleave(event as PointerEvent);\n        break;\n      case 'pointerup':\n        this.handlePointerup(event as PointerEvent);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private onControlChange(prev: HTMLElement | null, next: HTMLElement | null) {\n    if (isServer) return;\n\n    for (const event of EVENTS) {\n      prev?.removeEventListener(event, this);\n      next?.addEventListener(event, this);\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./ripple/internal/ripple-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{display:flex;margin:auto;pointer-events:none}:host([disabled]){display:none}@media(forced-colors: active){:host{display:none}}:host,.surface{border-radius:inherit;position:absolute;inset:0;overflow:hidden}.surface{-webkit-tap-highlight-color:rgba(0,0,0,0)}.surface::before,.surface::after{content:\"\";opacity:0;position:absolute}.surface::before{background-color:var(--md-ripple-hover-color, var(--md-sys-color-on-surface, #1d1b20));inset:0;transition:opacity 15ms linear,background-color 15ms linear}.surface::after{background:radial-gradient(closest-side, var(--md-ripple-pressed-color, var(--md-sys-color-on-surface, #1d1b20)) max(100% - 70px, 65%), transparent 100%);transform-origin:center center;transition:opacity 375ms linear}.hovered::before{background-color:var(--md-ripple-hover-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-ripple-hover-opacity, 0.08)}.pressed::after{opacity:var(--md-ripple-pressed-opacity, 0.12);transition-duration:105ms}\n`;\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {Ripple} from './internal/ripple.js';\nimport {styles} from './internal/ripple-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-ripple': MdRipple;\n  }\n}\n\n/**\n * @summary Ripples, also known as state layers, are visual indicators used to\n * communicate the status of a component or interactive element.\n *\n * @description A state layer is a semi-transparent covering on an element that\n * indicates its state. State layers provide a systematic approach to\n * visualizing states by using opacity. A layer can be applied to an entire\n * element or in a circular shape and only one state layer can be applied at a\n * given time.\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-ripple')\nexport class MdRipple extends Ripple {\n  static override styles: CSSResultOrNative[] = [styles];\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, ReactiveElement} from 'lit';\n\nimport {\n  internals,\n  WithElementInternals,\n} from '../../labs/behaviors/element-internals.js';\n\n/**\n * A string indicating the form submission behavior of the element.\n *\n * - submit: The element submits the form. This is the default value if the\n * attribute is not specified, or if it is dynamically changed to an empty or\n * invalid value.\n * - reset: The element resets the form.\n * - button: The element does nothing.\n */\nexport type FormSubmitterType = 'button' | 'submit' | 'reset';\n\n/**\n * An element that can submit or reset a `<form>`, similar to\n * `<button type=\"submit\">`.\n */\nexport interface FormSubmitter extends ReactiveElement, WithElementInternals {\n  /**\n   * A string indicating the form submission behavior of the element.\n   *\n   * - submit: The element submits the form. This is the default value if the\n   * attribute is not specified, or if it is dynamically changed to an empty or\n   * invalid value.\n   * - reset: The element resets the form.\n   * - button: The element does nothing.\n   */\n  type: FormSubmitterType;\n\n  /**\n   * The HTML name to use in form submission. When combined with a `value`, the\n   * submitting button's name/value will be added to the form.\n   *\n   * Names must reflect to a `name` attribute for form integration.\n   */\n  name: string;\n\n  /**\n   * The value of the button. When combined with a `name`, the submitting\n   * button's name/value will be added to the form.\n   */\n  value: string;\n}\n\ntype FormSubmitterConstructor =\n  | (new () => FormSubmitter)\n  | (abstract new () => FormSubmitter);\n\n/**\n * Sets up an element's constructor to enable form submission. The element\n * instance should be form associated and have a `type` property.\n *\n * A click listener is added to each element instance. If the click is not\n * default prevented, it will submit the element's form, if any.\n *\n * @example\n * ```ts\n * class MyElement extends mixinElementInternals(LitElement) {\n *   static {\n *     setupFormSubmitter(MyElement);\n *   }\n *\n *   static formAssociated = true;\n *\n *   type: FormSubmitterType = 'submit';\n * }\n * ```\n *\n * @param ctor The form submitter element's constructor.\n */\nexport function setupFormSubmitter(ctor: FormSubmitterConstructor) {\n  if (isServer) {\n    return;\n  }\n\n  (ctor as unknown as typeof ReactiveElement).addInitializer((instance) => {\n    const submitter = instance as FormSubmitter;\n    submitter.addEventListener('click', async (event) => {\n      const {type, [internals]: elementInternals} = submitter;\n      const {form} = elementInternals;\n      if (!form || type === 'button') {\n        return;\n      }\n\n      // Wait a full task for event bubbling to complete.\n      await new Promise<void>((resolve) => {\n        setTimeout(resolve);\n      });\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      if (type === 'reset') {\n        form.reset();\n        return;\n      }\n\n      // form.requestSubmit(submitter) does not work with form associated custom\n      // elements. This patches the dispatched submit event to add the correct\n      // `submitter`.\n      // See https://github.com/WICG/webcomponents/issues/814\n      form.addEventListener(\n        'submit',\n        (submitEvent) => {\n          Object.defineProperty(submitEvent, 'submitter', {\n            configurable: true,\n            enumerable: true,\n            get: () => submitter,\n          });\n        },\n        {capture: true, once: true},\n      );\n\n      elementInternals.setFormValue(submitter.value);\n      form.requestSubmit();\n    });\n  });\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Dispatches a click event to the given element that triggers a native action,\n * but is not composed and therefore is not seen outside the element.\n *\n * This is useful for responding to an external click event on the host element\n * that should trigger an internal action like a button click.\n *\n * Note, a helper is provided because setting this up correctly is a bit tricky.\n * In particular, calling `click` on an element creates a composed event, which\n * is not desirable, and a manually dispatched event must specifically be a\n * `MouseEvent` to trigger a native action.\n *\n * @example\n * hostClickListener = (event: MouseEvent) {\n *   if (isActivationClick(event)) {\n *     this.dispatchActivationClick(this.buttonElement);\n *   }\n * }\n *\n */\nexport function dispatchActivationClick(element: HTMLElement) {\n  const event = new MouseEvent('click', {bubbles: true});\n  element.dispatchEvent(event);\n  return event;\n}\n\n/**\n * Returns true if the click event should trigger an activation behavior. The\n * behavior is defined by the element and is whatever it should do when\n * clicked.\n *\n * Typically when an element needs to handle a click, the click is generated\n * from within the element and an event listener within the element implements\n * the needed behavior; however, it's possible to fire a click directly\n * at the element that the element should handle. This method helps\n * distinguish these \"external\" clicks.\n *\n * An \"external\" click can be triggered in a number of ways: via a click\n * on an associated label for a form  associated element, calling\n * `element.click()`, or calling\n * `element.dispatchEvent(new MouseEvent('click', ...))`.\n *\n * Also works around Firefox issue\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1804576 by squelching\n * events for a microtask after called.\n *\n * @example\n * hostClickListener = (event: MouseEvent) {\n *   if (isActivationClick(event)) {\n *     this.dispatchActivationClick(this.buttonElement);\n *   }\n * }\n *\n */\nexport function isActivationClick(event: Event) {\n  // Event must start at the event target.\n  if (event.currentTarget !== event.target) {\n    return false;\n  }\n  // Event must not be retargeted from shadowRoot.\n  if (event.composedPath()[0] !== event.target) {\n    return false;\n  }\n  // Target must not be disabled; this should only occur for a synthetically\n  // dispatched click.\n  if ((event.target as EventTarget & {disabled: boolean}).disabled) {\n    return false;\n  }\n  // This is an activation if the event should not be squelched.\n  return !squelchEvent(event);\n}\n\n// TODO(https://bugzilla.mozilla.org/show_bug.cgi?id=1804576)\n//  Remove when Firefox bug is addressed.\nfunction squelchEvent(event: Event) {\n  const squelched = isSquelchingEvents;\n  if (squelched) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n  }\n  squelchEventsForMicrotask();\n  return squelched;\n}\n\n// Ignore events for one microtask only.\nlet isSquelchingEvents = false;\nasync function squelchEventsForMicrotask() {\n  isSquelchingEvents = true;\n  // Need to pause for just one microtask.\n  // tslint:disable-next-line\n  await null;\n  isSquelchingEvents = false;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\n\nimport {html, isServer, LitElement, nothing} from 'lit';\nimport {property, query, queryAssignedElements} from 'lit/decorators.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {mixinDelegatesAria} from '../../internal/aria/delegate.js';\nimport {\n  FormSubmitter,\n  setupFormSubmitter,\n  type FormSubmitterType,\n} from '../../internal/controller/form-submitter.js';\nimport {\n  dispatchActivationClick,\n  isActivationClick,\n} from '../../internal/events/form-label-activation.js';\nimport {\n  internals,\n  mixinElementInternals,\n} from '../../labs/behaviors/element-internals.js';\n\n// Separate variable needed for closure.\nconst buttonBaseClass = mixinDelegatesAria(mixinElementInternals(LitElement));\n\n/**\n * A button component.\n */\nexport abstract class Button extends buttonBaseClass implements FormSubmitter {\n  static {\n    setupFormSubmitter(Button);\n  }\n\n  /** @nocollapse */\n  static readonly formAssociated = true;\n\n  /** @nocollapse */\n  static override shadowRootOptions: ShadowRootInit = {\n    mode: 'open',\n    delegatesFocus: true,\n  };\n\n  /**\n   * Whether or not the button is disabled.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  /**\n   * Whether or not the button is \"soft-disabled\" (disabled but still\n   * focusable).\n   *\n   * Use this when a button needs increased visibility when disabled. See\n   * https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#kbd_disabled_controls\n   * for more guidance on when this is needed.\n   */\n  @property({type: Boolean, attribute: 'soft-disabled', reflect: true})\n  softDisabled = false;\n\n  /**\n   * The URL that the link button points to.\n   */\n  @property() href = '';\n\n  /**\n   * The filename to use when downloading the linked resource.\n   * If not specified, the browser will determine a filename.\n   * This is only applicable when the button is used as a link (`href` is set).\n   */\n  @property() download = '';\n\n  /**\n   * Where to display the linked `href` URL for a link button. Common options\n   * include `_blank` to open in a new tab.\n   */\n  @property() target: '_blank' | '_parent' | '_self' | '_top' | '' = '';\n\n  /**\n   * Whether to render the icon at the inline end of the label rather than the\n   * inline start.\n   *\n   * _Note:_ Link buttons cannot have trailing icons.\n   */\n  @property({type: Boolean, attribute: 'trailing-icon', reflect: true})\n  trailingIcon = false;\n\n  /**\n   * Whether to display the icon or not.\n   */\n  @property({type: Boolean, attribute: 'has-icon', reflect: true}) hasIcon =\n    false;\n\n  /**\n   * The default behavior of the button. May be \"button\", \"reset\", or \"submit\"\n   * (default).\n   */\n  @property() type: FormSubmitterType = 'submit';\n\n  /**\n   * The value added to a form with the button's name when the button submits a\n   * form.\n   */\n  @property({reflect: true}) value = '';\n\n  get name() {\n    return this.getAttribute('name') ?? '';\n  }\n  set name(name: string) {\n    this.setAttribute('name', name);\n  }\n\n  /**\n   * The associated form element with which this element's value will submit.\n   */\n  get form() {\n    return this[internals].form;\n  }\n\n  @query('.button') private readonly buttonElement!: HTMLElement | null;\n\n  @queryAssignedElements({slot: 'icon', flatten: true})\n  private readonly assignedIcons!: HTMLElement[];\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.addEventListener('click', this.handleClick.bind(this));\n    }\n  }\n\n  override focus() {\n    this.buttonElement?.focus();\n  }\n\n  override blur() {\n    this.buttonElement?.blur();\n  }\n\n  protected override render() {\n    // Link buttons may not be disabled\n    const isRippleDisabled = !this.href && (this.disabled || this.softDisabled);\n    const buttonOrLink = this.href ? this.renderLink() : this.renderButton();\n    // TODO(b/310046938): due to a limitation in focus ring/ripple, we can't use\n    // the same ID for different elements, so we change the ID instead.\n    const buttonId = this.href ? 'link' : 'button';\n    return html`\n      ${this.renderElevationOrOutline?.()}\n      <div class=\"background\"></div>\n      <md-focus-ring part=\"focus-ring\" for=${buttonId}></md-focus-ring>\n      <md-ripple\n        part=\"ripple\"\n        for=${buttonId}\n        ?disabled=\"${isRippleDisabled}\"></md-ripple>\n      ${buttonOrLink}\n    `;\n  }\n\n  // Buttons can override this to add elevation or an outline. Use this and\n  // return `<md-elevation>` (for elevated, filled, and tonal buttons)\n  // or `<div class=\"outline\">` (for outlined buttons).\n  // Text buttons that have neither do not need to implement this.\n  protected renderElevationOrOutline?(): unknown;\n\n  private renderButton() {\n    // Needed for closure conformance\n    const {ariaLabel, ariaHasPopup, ariaExpanded} = this as ARIAMixinStrict;\n    return html`<button\n      id=\"button\"\n      class=\"button\"\n      ?disabled=${this.disabled}\n      aria-disabled=${this.softDisabled || nothing}\n      aria-label=\"${ariaLabel || nothing}\"\n      aria-haspopup=\"${ariaHasPopup || nothing}\"\n      aria-expanded=\"${ariaExpanded || nothing}\">\n      ${this.renderContent()}\n    </button>`;\n  }\n\n  private renderLink() {\n    // Needed for closure conformance\n    const {ariaLabel, ariaHasPopup, ariaExpanded} = this as ARIAMixinStrict;\n    return html`<a\n      id=\"link\"\n      class=\"button\"\n      aria-label=\"${ariaLabel || nothing}\"\n      aria-haspopup=\"${ariaHasPopup || nothing}\"\n      aria-expanded=\"${ariaExpanded || nothing}\"\n      href=${this.href}\n      download=${this.download || nothing}\n      target=${this.target || nothing}\n      >${this.renderContent()}\n    </a>`;\n  }\n\n  private renderContent() {\n    const icon = html`<slot\n      name=\"icon\"\n      @slotchange=\"${this.handleSlotChange}\"></slot>`;\n\n    return html`\n      <span class=\"touch\"></span>\n      ${this.trailingIcon ? nothing : icon}\n      <span class=\"label\"><slot></slot></span>\n      ${this.trailingIcon ? icon : nothing}\n    `;\n  }\n\n  private handleClick(event: MouseEvent) {\n    // If the button is soft-disabled, we need to explicitly prevent the click\n    // from propagating to other event listeners as well as prevent the default\n    // action.\n    if (!this.href && this.softDisabled) {\n      event.stopImmediatePropagation();\n      event.preventDefault();\n      return;\n    }\n\n    if (!isActivationClick(event) || !this.buttonElement) {\n      return;\n    }\n    this.focus();\n    dispatchActivationClick(this.buttonElement);\n  }\n\n  private handleSlotChange() {\n    this.hasIcon = this.assignedIcons.length > 0;\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../elevation/elevation.js';\n\nimport {html} from 'lit';\n\nimport {Button} from './button.js';\n\n/**\n * A filled button component.\n */\nexport class FilledButton extends Button {\n  protected override renderElevationOrOutline() {\n    return html`<md-elevation part=\"elevation\"></md-elevation>`;\n  }\n}\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./button/internal/filled-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_container-color: var(--md-filled-button-container-color, var(--md-sys-color-primary, #6750a4));--_container-elevation: var(--md-filled-button-container-elevation, 0);--_container-height: var(--md-filled-button-container-height, 40px);--_container-shadow-color: var(--md-filled-button-container-shadow-color, var(--md-sys-color-shadow, #000));--_disabled-container-color: var(--md-filled-button-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-elevation: var(--md-filled-button-disabled-container-elevation, 0);--_disabled-container-opacity: var(--md-filled-button-disabled-container-opacity, 0.12);--_disabled-label-text-color: var(--md-filled-button-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-filled-button-disabled-label-text-opacity, 0.38);--_focus-container-elevation: var(--md-filled-button-focus-container-elevation, 0);--_focus-label-text-color: var(--md-filled-button-focus-label-text-color, var(--md-sys-color-on-primary, #fff));--_hover-container-elevation: var(--md-filled-button-hover-container-elevation, 1);--_hover-label-text-color: var(--md-filled-button-hover-label-text-color, var(--md-sys-color-on-primary, #fff));--_hover-state-layer-color: var(--md-filled-button-hover-state-layer-color, var(--md-sys-color-on-primary, #fff));--_hover-state-layer-opacity: var(--md-filled-button-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-filled-button-label-text-color, var(--md-sys-color-on-primary, #fff));--_label-text-font: var(--md-filled-button-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-filled-button-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-filled-button-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-filled-button-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_pressed-container-elevation: var(--md-filled-button-pressed-container-elevation, 0);--_pressed-label-text-color: var(--md-filled-button-pressed-label-text-color, var(--md-sys-color-on-primary, #fff));--_pressed-state-layer-color: var(--md-filled-button-pressed-state-layer-color, var(--md-sys-color-on-primary, #fff));--_pressed-state-layer-opacity: var(--md-filled-button-pressed-state-layer-opacity, 0.12);--_disabled-icon-color: var(--md-filled-button-disabled-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-icon-opacity: var(--md-filled-button-disabled-icon-opacity, 0.38);--_focus-icon-color: var(--md-filled-button-focus-icon-color, var(--md-sys-color-on-primary, #fff));--_hover-icon-color: var(--md-filled-button-hover-icon-color, var(--md-sys-color-on-primary, #fff));--_icon-color: var(--md-filled-button-icon-color, var(--md-sys-color-on-primary, #fff));--_icon-size: var(--md-filled-button-icon-size, 18px);--_pressed-icon-color: var(--md-filled-button-pressed-icon-color, var(--md-sys-color-on-primary, #fff));--_container-shape-start-start: var(--md-filled-button-container-shape-start-start, var(--md-filled-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-start-end: var(--md-filled-button-container-shape-start-end, var(--md-filled-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-end: var(--md-filled-button-container-shape-end-end, var(--md-filled-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_container-shape-end-start: var(--md-filled-button-container-shape-end-start, var(--md-filled-button-container-shape, var(--md-sys-shape-corner-full, 9999px)));--_leading-space: var(--md-filled-button-leading-space, 24px);--_trailing-space: var(--md-filled-button-trailing-space, 24px);--_with-leading-icon-leading-space: var(--md-filled-button-with-leading-icon-leading-space, 16px);--_with-leading-icon-trailing-space: var(--md-filled-button-with-leading-icon-trailing-space, 24px);--_with-trailing-icon-leading-space: var(--md-filled-button-with-trailing-icon-leading-space, 24px);--_with-trailing-icon-trailing-space: var(--md-filled-button-with-trailing-icon-trailing-space, 16px)}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./button/internal/shared-elevation-styles.css.\nimport {css} from 'lit';\nexport const styles = css`md-elevation{transition-duration:280ms}:host(:is([disabled],[soft-disabled])) md-elevation{transition:none}md-elevation{--md-elevation-level: var(--_container-elevation);--md-elevation-shadow-color: var(--_container-shadow-color)}:host(:focus-within) md-elevation{--md-elevation-level: var(--_focus-container-elevation)}:host(:hover) md-elevation{--md-elevation-level: var(--_hover-container-elevation)}:host(:active) md-elevation{--md-elevation-level: var(--_pressed-container-elevation)}:host(:is([disabled],[soft-disabled])) md-elevation{--md-elevation-level: var(--_disabled-container-elevation)}\n`;\n", "/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./button/internal/shared-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end);box-sizing:border-box;cursor:pointer;display:inline-flex;gap:8px;min-height:var(--_container-height);outline:none;padding-block:calc((var(--_container-height) - max(var(--_label-text-line-height),var(--_icon-size)))/2);padding-inline-start:var(--_leading-space);padding-inline-end:var(--_trailing-space);place-content:center;place-items:center;position:relative;font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight);text-overflow:ellipsis;text-wrap:nowrap;user-select:none;-webkit-tap-highlight-color:rgba(0,0,0,0);vertical-align:top;--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}md-focus-ring{--md-focus-ring-shape-start-start: var(--_container-shape-start-start);--md-focus-ring-shape-start-end: var(--_container-shape-start-end);--md-focus-ring-shape-end-end: var(--_container-shape-end-end);--md-focus-ring-shape-end-start: var(--_container-shape-end-start)}:host(:is([disabled],[soft-disabled])){cursor:default;pointer-events:none}.button{border-radius:inherit;cursor:inherit;display:inline-flex;align-items:center;justify-content:center;border:none;outline:none;-webkit-appearance:none;vertical-align:middle;background:rgba(0,0,0,0);text-decoration:none;min-width:calc(64px - var(--_leading-space) - var(--_trailing-space));width:100%;z-index:0;height:100%;font:inherit;color:var(--_label-text-color);padding:0;gap:inherit;text-transform:inherit}.button::-moz-focus-inner{padding:0;border:0}:host(:hover) .button{color:var(--_hover-label-text-color)}:host(:focus-within) .button{color:var(--_focus-label-text-color)}:host(:active) .button{color:var(--_pressed-label-text-color)}.background{background-color:var(--_container-color);border-radius:inherit;inset:0;position:absolute}.label{overflow:hidden}:is(.button,.label,.label slot),.label ::slotted(*){text-overflow:inherit}:host(:is([disabled],[soft-disabled])) .label{color:var(--_disabled-label-text-color);opacity:var(--_disabled-label-text-opacity)}:host(:is([disabled],[soft-disabled])) .background{background-color:var(--_disabled-container-color);opacity:var(--_disabled-container-opacity)}@media(forced-colors: active){.background{border:1px solid CanvasText}:host(:is([disabled],[soft-disabled])){--_disabled-icon-color: GrayText;--_disabled-icon-opacity: 1;--_disabled-container-opacity: 1;--_disabled-label-text-color: GrayText;--_disabled-label-text-opacity: 1}}:host([has-icon]:not([trailing-icon])){padding-inline-start:var(--_with-leading-icon-leading-space);padding-inline-end:var(--_with-leading-icon-trailing-space)}:host([has-icon][trailing-icon]){padding-inline-start:var(--_with-trailing-icon-leading-space);padding-inline-end:var(--_with-trailing-icon-trailing-space)}::slotted([slot=icon]){display:inline-flex;position:relative;writing-mode:horizontal-tb;fill:currentColor;flex-shrink:0;color:var(--_icon-color);font-size:var(--_icon-size);inline-size:var(--_icon-size);block-size:var(--_icon-size)}:host(:hover) ::slotted([slot=icon]){color:var(--_hover-icon-color)}:host(:focus-within) ::slotted([slot=icon]){color:var(--_focus-icon-color)}:host(:active) ::slotted([slot=icon]){color:var(--_pressed-icon-color)}:host(:is([disabled],[soft-disabled])) ::slotted([slot=icon]){color:var(--_disabled-icon-color);opacity:var(--_disabled-icon-opacity)}.touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--_container-height))/2) 0}:host([touch-target=none]) .touch{display:none}\n`;\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {CSSResultOrNative} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport {FilledButton} from './internal/filled-button.js';\nimport {styles as filledStyles} from './internal/filled-styles.js';\nimport {styles as sharedElevationStyles} from './internal/shared-elevation-styles.js';\nimport {styles as sharedStyles} from './internal/shared-styles.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'md-filled-button': MdFilledButton;\n  }\n}\n\n/**\n * @summary Buttons help people take action, such as sending an email, sharing a\n * document, or liking a comment.\n *\n * @description\n * __Emphasis:__ High emphasis – For the primary, most important, or most common\n * action on a screen\n *\n * __Rationale:__ The filled button’s contrasting surface color makes it the\n * most prominent button after the FAB. It’s used for final or unblocking\n * actions in a flow.\n *\n * __Example usages:__\n * - Save\n * - Confirm\n * - Done\n *\n * @final\n * @suppress {visibility}\n */\n@customElement('md-filled-button')\nexport class MdFilledButton extends FilledButton {\n  static override styles: CSSResultOrNative[] = [\n    sharedStyles,\n    sharedElevationStyles,\n    filledStyles,\n  ];\n}\n"],
  "mappings": "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",
  "names": ["MdElevation", "styles", "MdFocusRing", "styles", "State", "EVENTS", "styles", "MdRipple", "styles", "styles", "styles", "styles", "MdFilledButton", "styles"]
}
